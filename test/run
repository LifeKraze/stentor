#!/usr/bin/env node
var fs           = require('fs')
  , spawn        = require('child_process').spawn;

process.env.NODE_ENV = 'test';

var app = spawn('node', ['app', '-e', 'test', '-w', '2']);

process.on('SIGINT', exit);
process.on('SIGTERM', exit);
process.on('exit', exit);
app.stdout.pipe(process.stdout);
app.stderr.pipe(process.stderr);

fs.access(process.cwd()+'/config/apn.json', function(err) {
  if (!err) {
    runTests();
  } else {
    fs.readFile(process.cwd()+'/config/apn.sample.json', 'utf8', function(err, data) {
      if (err) {
        process.stdout.write('Error copying apn.sample.json to apn.json');
        exit(1);
      } else {
        fs.writeFile(process.cwd()+'/config/apn.json', data, function(err) {
          if (err) {
            process.stdout.write('Error writing apn.sample.json to apn.json');
            exit(1);
          } else {
            runTests();
          }
        });
      }
    });
  }
});

function exit(code) {
  app.kill();
  process.exit(code);
};

function runTests() {
  setTimeout(function() {
    var mocha = spawn('mocha', ['-R', 'spec'], {stdio: 'inherit'});
    mocha.on('SIGINT', exit);
    mocha.on('SIGTERM', exit);
    mocha.on('exit', exit);
  }, 1000);
};
